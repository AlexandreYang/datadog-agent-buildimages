stages:
  #- build
  - release

# .winbuild: &winbuild
#   stage: build
#   except: [ tags, schedules ]
#   script:
#     - echo  "build --build-arg BASE_IMAGE=$($Env:BASE_IMAGE) --build-arg TARGET_ARCH=$($Env:TARGET_ARCH) --build-arg WINDOWS_VERSION=$($Env:WINDOWS_VERSION) --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$($Env:IMAGE):v2472051-29c3f55 --file $DOCKERFILE ."
#     - powershell -Command "docker build --no-cache --build-arg BASE_IMAGE=$($Env:BASE_IMAGE) --build-arg TARGET_ARCH=$($Env:TARGET_ARCH) --build-arg WINDOWS_VERSION=$($Env:WINDOWS_VERSION) --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$($Env:IMAGE):v2472051-29c3f55 --file $DOCKERFILE ."
#     - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$($Env:IMAGE):v2472051-29c3f55
#   after_script:
#     - docker image prune -f
#     - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$($Env:IMAGE):v2472051-29c3f55

# build_windows_1809_x64:
#   extends: .winbuild
#   tags: [ "runner:windows-docker", "windowsversion:1809" ]
#   variables:
#     DOCKERFILE: windows/Dockerfile
#     IMAGE: windows_1809_x64
#     BASE_IMAGE: mcr.microsoft.com/dotnet/framework/runtime:4.8-20200114-windowsservercore-ltsc2019
#     TARGET_ARCH: x64
#     WINDOWS_VERSION: 1809
#   resource_group: windows_x64

.winrelease:
  stage: release
  except: [ tags, schedules ]
  tags: ["runner:windows-docker", "windowsversion:1909"]
  script:
    - $SHORT_CI_COMMIT_SHA = ${CI_COMMIT_SHA}.Substring(0,7)
    - $SRC_TAG = "v${CI_PIPELINE_ID}-${SHORT_CI_COMMIT_SHA}"
    - $SRC_IMAGE="486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$($Env:IMAGE):v2472051-29c3f55"
    - mkdir ci-scripts
    - docker pull ${SRC_IMAGE}
    - |
      @"
      Set-PSDebug -Trace 1
      `$ErrorActionPreference = "Stop"
      # ECR Login
      `$AWS_ECR_PASSWORD = aws ecr get-login-password --region us-east-1
      docker login --username AWS --password "`${AWS_ECR_PASSWORD}" 486234852809.dkr.ecr.us-east-1.amazonaws.com
      # DockerHub login
      `$DOCKER_REGISTRY_LOGIN = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.${DOCKER_REGISTRY_LOGIN_SSM_KEY} --with-decryption --query "Parameter.Value" --out text
      `$DOCKER_REGISTRY_PWD = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.${DOCKER_REGISTRY_PWD_SSM_KEY} --with-decryption --query "Parameter.Value" --out text
      docker login --username "`${DOCKER_REGISTRY_LOGIN}" --password "`${DOCKER_REGISTRY_PWD}" "${DOCKER_REGISTRY_URL}"
      docker tag ${SRC_IMAGE} 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${Env:IMAGE}:latest
      docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${Env:IMAGE}:latest
      docker tag ${SRC_IMAGE} datadog/agent-buildimages-${Env:IMAGE}:v2472051-29c3f55
      docker push datadog/agent-buildimages-${Env:IMAGE}:v2472051-29c3f55
      "@ | out-file ci-scripts/docker-publish.ps1
    - cat ci-scripts/docker-publish.ps1
    - docker run --rm -w C:\mnt -e IS_AWS_CONTAINER=true -e SIGN_WINDOWS=true -v "$(Get-Location):C:\mnt" -v \\.\pipe\docker_engine:\\.\pipe\docker_engine 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/windows_1909_x64:v2348149-ba6640d powershell -C C:\mnt\ci-scripts\docker-publish.ps1
  after_script:
    - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$($Env:IMAGE):v2472051-29c3f55 datadog/agent-buildimages-$($Env:IMAGE):v2472051-29c3f55

release_windows_1809_x64:
  extends: .winrelease
  variables:
    IMAGE: windows_1809_x64
